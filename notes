 Question 1 


I want to contract appeared with player because contract belongs to player. Thats why I wrote this code 
but it did not work and i got error 



class ContractsController < ApplicationController
    before_action :set_player
    
    
    def index 
        @contract = @player.contracts
        render json: @contracts  
        
    end 


    def show 
      @contract = Contract.find(params[:id])
      render json: @contracts
    #   @player.contracts.find_by(id: params[:id])
    end 
    
    
    def create 
        @contract = @player.contracts.new(contract_params)
         render json: @contracts
    end 
    
   

    def destroy 
       
    end 

    private 
     def set_player
        @player = Player.find(params[:player_id])

     end


    def contract_params 
    params.require(:contract).permit(:start_date, :expiration_date, :amount, :player_id, :team_id)
    end 
end




import React from 'react'
// import Player from './Player'
import {Link} from 'react-router-dom'
import './NewContract.css'
import '../index.css'


class Players extends React.Component {
  
  //Need to do
  //1) Use dictionary/hash map to keep track of each player's likes
  //2) Initilize all player's likes to 0 or have an if/else statement to workaround it
  //3 

  state = {
      // default state for all players need to be defined here
      // default will be 0
                    //  1 2 3 4 5 6 7 8 9
      player_likes : [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    }
    
  
  
  handleClick = pid => () => {
    

    console.log(this.state.player_likes);
    this.state.player_likes[pid] = this.state.player_likes[pid] + 1
    this.setState({
      player_likes : this.state.player_likes
    })

  }
  
  render() {
    let classes = ['red', 'bold'].join(' ');

    return (      
      <div> 
       {this.props.players.map(player => 
       <li key={player.id} className={classes}> 
       <Link to={`/players/${player.id}`}>{player.name}</Link>
       <button text="text"  value={this.state.value} onClick={this.handleClick(player.id)}>likes</button>
       {this.state.player_likes[player.id]}
       
       </li>)}
    </div>
  
  
    )

  }

 }

 export default Players




 // console.log(this.players)   // likes: 0,
  // sm handleClick = (event)  => {
  // console.log(` before setState: ${this.state.likes}`)
  //const newLikes = this.state.likes + 1 
  //console.log(`after setState: ${this.state.likes}`)